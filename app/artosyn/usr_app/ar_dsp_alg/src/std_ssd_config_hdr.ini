# This is for standard mobilenetSSD test
# We recommend that all DSP run same networks, since this way can share weight data and save rescheduling time, hence maximum DSP capbility

[system]
dump_results = OFF
dump_statistics = OFF
# usually this is used when processing sensor input
draw_osd = ON

# Err: 0, Warning: 1, Notice: 2, Debug: 3
loglevel = 0

# Define which DSP should load weight data, others can share the weight
# This is obviously for the scenario that all DSP run same networks.
# DSP id: 0, 1, 2, 3,
# -1 means every DSP should load their own weight files, this is for DSP to run different networks.
who_load_weight_data = 1

[DSP0]
demo_name = std_ssd_test
#Currently, as a demo code, we support standard mobilenetssd demo and multi network test and simple face detect test
# std_ssd_test, network_evaluation, face_detect_test

DSP_enable = OFF
# Used by CDNN to improve performace, make sure the sram range is valid and no others are using it.
# When there's no sram to use, these should be set N/A, and they'll be malloced by code.
cdnn_sram_heap_start = 0x30000000
cdnn_sram_heap_size = 0xC8000
cdnn_ext_mem_size = 73400320 # 70MB
network = network_0

[DSP1]
#Currently, as a demo code, we support standard mobilenetssd demo and multi network test and simple face detect test
# std_ssd_test, network_evaluation, face_detect_test
demo_name = std_ssd_test

DSP_enable = ON
# Used by CDNN to improve performace, make sure the sram range is valid and no others are using it.
# When there's no sram to use, these should be set N/A, and they'll be malloced by code.
cdnn_sram_heap_start = 0x3013C000
cdnn_sram_heap_size = 0xBC000
cdnn_ext_mem_size = 73400320 # 70MB
network = network_0

[DSP2]
#Currently, as a demo code, we support standard mobilenetssd demo and multi network test and simple face detect test
# std_ssd_test, network_evaluation, face_detect_test
demo_name = std_ssd_test

DSP_enable = OFF
# Used by CDNN to improve performace, make sure the sram range is valid and no others are using it.
# When there's no sram to use, these should be set N/A, and they'll be malloced by code.
cdnn_sram_heap_start = 0
cdnn_sram_heap_size = 0x100000
cdnn_ext_mem_size = 73400320 # 70MB
network = network_0

[DSP3]
#Currently, as a demo code, we support standard mobilenetssd demo and multi network test and simple face detect test
# std_ssd_test, network_evaluation, face_detect_test
demo_name = std_ssd_test

DSP_enable = OFF
# Used by CDNN to improve performace, make sure the sram range is valid and no others are using it.
# When there's no sram to use, these should be set N/A, and they'll be malloced by code.
cdnn_sram_heap_start = 0
cdnn_sram_heap_size = 0x100000
cdnn_ext_mem_size = 73400320 # 70MB
network = network_0

# max 7 networks are supported on each DSP simultaneously
# the section name must be continuous from network_0 to network_n
[network_0]
# each network has an unique id, must be a int value greater than zero.
network_id = 200

# AR_DSP_ALG_DETECT_NETWORK = 1, AR_DSP_ALG_CLASSIFY_NETWORK = 2
network_type = 1

# sensor, local, stream(TBD)
input_source = sensor
do_debug_logging = 0
do_profiling = 0

# if disabled resize_by_dsp, ARM will do the read/yuv2bgr/crop/resize, the img format is BGR
# if resize_by_dsp, the img to input layer will be RGB
# enable: 1, disable: 0
channel_swap = 0
raw_scale = 0

# Usually resize_input should be set
resize_input = 1

# Params for MTCNN
amend_flag = 0
block_size = 0
block_number = 0
block_interval = 0

# Params for FCN
num_of_inference = 0
max_width = 0
max_height = 0

bw_reduction = 0
bw_reduction_ratio = 0.0
output_threshold = 0.6

# This is the buffer size for CDNN output
len_of_buffer_for_pdata = 0x800000

weight_file_path = /local/usr/bin/std_ssd_v3.cdnnQdata
weight_file_path_win32 = ..\\..\\std_ssd_v3.cdnnQdata

# This is only used when input is 'local'
# The directory that contains the test image(*.jpg, *.bmp, *.png) for this network
# The test results will ba saved in local_img_path/results.txt
local_img_directory = /mnt/std_ssd_test_img/
local_img_directory_win32 = D:\\std_ssd_test_img\\

# softmax threshold, support max 8
softmax_threshold_names = name1 name2
softmax_threshold_values = 0.1 0.2

# If set, DSP will do the resize before sending to input layer, otherwise, ARM does it with OpenCV.
# and the data after CV is always BGR format
resize_by_dsp = 0

# user defined parameters, need to cowork with Linux App and DSP code
other_parameters = 0

# support max 4 inputs, CDNN use them by name and id
num_inputs = 1

# ==============below are input_0 parameters =============
[network_0_input_0]
layerName = data_original
bufferId = 0

# AR_DSP_IMG_FMT_YUV = 0x200, //YUV420,3 planar format
# AR_DSP_IMG_FMT_BGR = 0X201
# AR_DSP_IMG_FMT_RGB = 0X202
# AR_DSP_IMG_FMT_GRAY = 0X203
# Other fmt to be added later
input_format = 0x201

# image size: w*h*c
#921600
input_buffer_len = 921600
width = 300
height = 300
nChannels = 3

# Data type:
# AR_CDNN_DATATYPE_U8 = 1
# AR_CDNN_DATATYPE_S8 = 2
# AR_CDNN_DATATYPE_U16 = 4
# AR_CDNN_DATATYPE_S16 = 8
# AR_CDNN_DATATYPE_U32 = 16
# AR_CDNN_DATATYPE_S32 = 32
# AR_CDNN_DATATYPE_F32 = 64
# AR_CDNN_DATATYPE_F64 = 128
dataType = 1

# Data depth:
# AR_CDNN_PRECISION_8BIT = 8
# AR_CDNN_PRECISION_16BIT = 16
# AR_CDNN_PRECISION_32BIT = 32
# AR_CDNN_PRECISION_64BIT = 64
depth = 8

# Data order:
# Sets the data dimension order: channels, height, width, inputs
# AR_CDNN_MEMORY_DATAORDER_NWHC = 0
# AR_CDNN_MEMORY_DATAORDER_NHWC = 1
# AR_CDNN_MEMORY_DATAORDER_CWHN = 2
# AR_CDNN_MEMORY_DATAORDER_CHWN = 3
# AR_CDNN_MEMORY_DATAORDER_NCWH = 4
# AR_CDNN_MEMORY_DATAORDER_NCHW = 5
# AR_CDNN_MEMORY_DATAORDER_CNWH = 6
# AR_CDNN_MEMORY_DATAORDER_CNHW = 7
# AR_CDNN_MEMORY_DATAORDER_WHCN = 8
# AR_CDNN_MEMORY_DATAORDER_HWCN = 9
# AR_CDNN_MEMORY_DATAORDER_WHNC = 10
# AR_CDNN_MEMORY_DATAORDER_HWNC = 11
dataOrder = 1

# Num of input maps
nInputs = 1

scaleFactor = 0.0
dataFlipped = 0
dataTransposed = 0

# ==============below are input_1 parameters =============
[network_0_input_1]
# Please refer to input_0 parameters

# ==============below are input_2 parameters =============
[network_0_input_2]

# ==============below are input_0 parameters =============
[network_0_input_3]

#user can define their own task to let DSP handle, and should write their code accordingly
[user_cfg_0]
operation_id =
parameters =


\00
