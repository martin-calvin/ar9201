/*
 * register_addr.h(arm)
 *
 *  Created on: 2017��3��21��
 *      Author: jianliu
 */

#ifndef REGISTER_ADDR_H_
#define REGISTER_ADDR_H_

#define CORE0_OFFSET_ADDR 0x62000000
#define CORE1_OFFSET_ADDR 0x62800000
#define CORE2_OFFSET_ADDR 0x63000000
#define CORE3_OFFSET_ADDR 0x63800000

#define CORE_OFFSET 0x800000

#define CPM_OFFSET 0x400000

#define DTCM_ADDR (0x0)

#define CORE0_DTCM_ADDR (CORE0_OFFSET_ADDR + DTCM_ADDR)

#define CORE0_MCCI_OFFSET_ADDR (CORE0_OFFSET_ADDR + CPM_OFFSET)
#define CORE1_MCCI_OFFSET_ADDR (CORE1_OFFSET_ADDR + CPM_OFFSET)
#define CORE2_MCCI_OFFSET_ADDR (CORE2_OFFSET_ADDR + CPM_OFFSET)
#define CORE3_MCCI_OFFSET_ADDR (CORE3_OFFSET_ADDR + CPM_OFFSET)

#define MCCI_OFFSET 0x0
#define MCCI_REG_ADDR_OFFSET 0x4
#define MCCI_STS_OFFSET 0X80

#define CORE0_MCCI_STS_OFFSET_ADDR (CORE0_OFFSET_ADDR + CPM_OFFSET + MCCI_STS_OFFSET)
#define CORE1_MCCI_STS_OFFSET_ADDR (CORE1_OFFSET_ADDR + CPM_OFFSET + MCCI_STS_OFFSET)
#define CORE2_MCCI_STS_OFFSET_ADDR (CORE2_OFFSET_ADDR + CPM_OFFSET + MCCI_STS_OFFSET)
#define CORE3_MCCI_STS_OFFSET_ADDR (CORE3_OFFSET_ADDR + CPM_OFFSET + MCCI_STS_OFFSET)

#define REGISTER_BASE_ADDR 0x64570000

#define ARB_REG_INT_CORE_OFFSET (0x100)

#define CORE_ID_CPM_ADDR 0x178
#define ADDx_ATT1_ADDR 0x728

#define CORE0_WAIT_ADDR (REGISTER_BASE_ADDR + 0x3020)

#define DSP_POWER_REG_ADDR (REGISTER_BASE_ADDR + 0x3400)
#define DSP_POWER_LOCK_REG_ADDR (REGISTER_BASE_ADDR + 0x3408)
#define DSP_POWER_INT_CORE_OFFSET (4)

#define CORE0_INT0_MASK_OFFSET (REGISTER_BASE_ADDR + 0x4000)
#define CORE0_INT1_MASK_OFFSET (REGISTER_BASE_ADDR + 0x4004)
#define CORE0_INT2_MASK_OFFSET (REGISTER_BASE_ADDR + 0x400c)
#define CORE1_INT0_MASK_OFFSET (REGISTER_BASE_ADDR + 0x5000)
#define CORE1_INT1_MASK_OFFSET (REGISTER_BASE_ADDR + 0x5004)
#define CORE1_INT2_MASK_OFFSET (REGISTER_BASE_ADDR + 0x500c)
#define CORE2_INT0_MASK_OFFSET (REGISTER_BASE_ADDR + 0x6000)
#define CORE2_INT1_MASK_OFFSET (REGISTER_BASE_ADDR + 0x6004)
#define CORE2_INT2_MASK_OFFSET (REGISTER_BASE_ADDR + 0x600c)
#define CORE3_INT0_MASK_OFFSET (REGISTER_BASE_ADDR + 0x7000)
#define CORE3_INT1_MASK_OFFSET (REGISTER_BASE_ADDR + 0x7004)
#define CORE3_INT2_MASK_OFFSET (REGISTER_BASE_ADDR + 0x700c)

#define CORE0_CACHE_INVALIDATE_REG (REGISTER_BASE_ADDR + 0x300C)

#define TO_ARM_INTERRUPT0_BASE (REGISTER_BASE_ADDR + 0x4020)
#define TO_ARM_INTERRUPT0_MASK_BASE (REGISTER_BASE_ADDR + 0x4024)
#define TO_ARM_INTERRUPT1_BASE (REGISTER_BASE_ADDR + 0x4028)
#define TO_ARM_INTERRUPT1_MASK_BASE (REGISTER_BASE_ADDR + 0x402C)

#define TO_ARM_INTERRUPT_CORE_OFFSET 0x1000

#define TO_ARM_INTERRUPT1_CORE_OFFSET 0x1000

#define UART_CONFIG_ADDR 0X8000
#define UART_DATA_ADDR 0x8004
#define UART_TRAN_ADDR 0x8014


#define UART_CONFIG_OFFSET (REGISTER_BASE_ADDR + UART_CONFIG_ADDR)
#define UART_DATA_OFFSET (REGISTER_BASE_ADDR + UART_DATA_ADDR)
#define UART_TRAN_OFFSET (REGISTER_BASE_ADDR + UART_TRAN_ADDR)

#define CORE_ADDR_INC_INT 0X1000
#define CORE_INT_INC_INT 0X4

#define MCCI_MES_INTERRUPT_BIT 0
#define COMM_INT_EN_ADDR 0x84
#define TIMER_INTERRUPT_BIT 1
#define DMA_INTERRUPT_BIT 0

#define CORE0_DSP_IDLE_ADDR (REGISTER_BASE_ADDR + 0X3048)
#define CORE0_CORE_IDLE_ADDR (REGISTER_BASE_ADDR + 0X304c)

#define IDLE_REG_OFFSET_INTER_CORE (0x100)

#define DSP_NOC_RESET_ADDR (REGISTER_BASE_ADDR + 0x1044)
#define GLOBAL_RESET_ADDR (REGISTER_BASE_ADDR + 0x1000)
#define CORE0_GLOBAL_RESET_ADDR (REGISTER_BASE_ADDR + 0x1004)
#define CORE0_SYSTEM_RESET_ADDR (REGISTER_BASE_ADDR + 0x1008)
#define CORE0_CORE_RESET_ADDR (REGISTER_BASE_ADDR + 0x100c)
#define CORE0_OCEM_RESET_ADDR (REGISTER_BASE_ADDR + 0x1010)
#define RGU_ADDR_INC_INTER_CORE (0x10)

#define CORE0_SYSTIML (CORE0_MCCI_OFFSET_ADDR + 0x680)
#define CORE0_SYSTIMH (CORE0_MCCI_OFFSET_ADDR + 0x684)

#define DBG_GEN_MASK (0Xd28)
#define DBG_GEN_2_MASK (0Xd2c)


#endif /* REGISTER_ADDR_H_ */
